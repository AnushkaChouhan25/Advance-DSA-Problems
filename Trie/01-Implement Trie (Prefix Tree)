class Node{
    Node arr[] = new Node[26];
    boolean eow = false;

    public Node(){
        for(int i = 0; i < 26; i++){
            arr[i] = null;
        }
    }
}

class Trie {    
   public static Node root;
    public Trie() {
        root = new Node();
    }
    
    public void insert(String word) {
        Node curr = root;
        for(int i = 0; i < word.length(); i++){
            int idx = word.charAt(i)-'a';
            if(curr.arr[idx] == null){
                curr.arr[idx] = new Node();
            }
            curr = curr.arr[idx];
        }
        curr.eow = true;
    }
    
    public boolean search(String word) {
        Node curr = root;
        for(int i = 0; i < word.length(); i++){
            int idx = word.charAt(i)-'a';
            if(curr.arr[idx] == null){
                return false;
            }
            curr = curr.arr[idx];
        }
        return curr.eow == true;
    }
    
    public boolean startsWith(String prefix) {
        Node curr = root;
        for(int i = 0; i < prefix.length(); i++){
            int idx = prefix.charAt(i)-'a';
            if(curr.arr[idx] == null){
                return false;
            }
            curr = curr.arr[idx];
        }
        return true;
    }
}
 