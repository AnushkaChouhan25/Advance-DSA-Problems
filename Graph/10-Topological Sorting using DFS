class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    { 
        boolean[] vis = new boolean[V];
        Stack<Integer> s = new Stack<>();
        for(int i = 0; i< V; i++){
            if(!vis[i]){
                dfs(i, vis, s, adj);
            }
        }
        int[] ans = new int[V];
        for(int i = 0; i< V; i++){
            ans[i] = s.peek();
            s.pop();
        }
        return ans;
    }
    public static void dfs(int curr, boolean[] vis, Stack<Integer> s,  ArrayList<ArrayList<Integer>> adj){
        vis[curr] = true;
        for(int i : adj.get(curr)){
            if(!vis[i]){
                dfs(i, vis, s, adj);
            }
        }
        s.push(curr);
    }
}
